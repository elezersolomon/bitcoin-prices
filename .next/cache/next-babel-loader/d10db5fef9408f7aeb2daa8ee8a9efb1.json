{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\nextjs\\\\components\\\\prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Prices = /*#__PURE__*/function (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  var _super = _createSuper(Prices);\n\n  function Prices() {\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'USD'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.currency === 'USD') {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8,\n            columnNumber: 13\n          }\n        }, __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 2\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 2\n          }\n        }, \"check current bit coin prices\"), \"bitcoin rate for \", this.props.bpi.description, \":- \", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 50\n          }\n        }, this.props.bpi.USD.code), __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 2\n          }\n        }, this.props.bpi.USD.rate)));\n      }\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["C:/wamp64/www/nextjs/components/prices.js"],"names":["Prices","currency","state","props","bpi","description","USD","code","rate","React","Component"],"mappings":";;;;;;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;;;4DACI;AACFC,MAAAA,QAAQ,EAAC;AADP,K;;;;;;;6BAID;AACL,UAAI,KAAKC,KAAL,CAAWD,QAAX,KAAwB,KAA5B,EAAkC;AAClC,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEX;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADA,uBAEkB,KAAKE,KAAL,CAAWC,GAAX,CAAeC,WAFjC,SAEgD;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKF,KAAL,CAAWC,GAAX,CAAeE,GAAf,CAAmBC,IAA1D,CAFhD,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeE,GAAf,CAAmBE,IAA5B,CAHA,CAFW,CAAR;AASC;AAGJ;;;;EAnBoBC,KAAK,CAACC,S;;AA0B3B,eAAeV,MAAf","sourcesContent":["class Prices extends React.Component{\r\n    state={\r\n        currency:'USD',\r\n    }\r\n\r\nrender() {\r\n    if (this.state.currency === 'USD'){\r\n    return (<div>\r\n    \r\n <li  className=\"list-group-item\">\r\n <p>check current bit coin prices</p>\r\n bitcoin rate for {this.props.bpi.description}:- <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span>\r\n <strong>{this.props.bpi.USD.rate}</strong>\r\n</li>\r\n</div>\r\n    )\r\n    }\r\n   \r\n    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Prices"]},"metadata":{},"sourceType":"module"}