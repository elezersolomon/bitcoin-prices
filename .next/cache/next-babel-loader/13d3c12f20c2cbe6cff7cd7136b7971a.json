{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\nextjs\\\\components\\\\prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Prices = /*#__PURE__*/function (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  var _super = _createSuper(Prices);\n\n  function Prices() {\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'USD'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.currency === 'USD') {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 13\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 5\n          }\n        }, __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 8\n          }\n        }, \" \", __jsx(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 42\n          }\n        }, __jsx(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 46\n          }\n        }, \"USD\"), __jsx(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 58\n          }\n        }, \"GBP\"), __jsx(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 70\n          }\n        }, \"EUR\")), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 9\n          }\n        }, \"check current bit coin prices\"), \"bitcoin rate for \", this.props.bpi.description, \":- \", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 57\n          }\n        }, this.props.bpi.USD.code), __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 9\n          }\n        }, this.props.bpi.USD.rate))));\n      } else if (this.state.currency === 'GBP') {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }\n        }, __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }\n        }, \"check current bit coin prices\"), \"bitcoin rate for \", this.props.bpi.description, \":- \", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 65\n          }\n        }, this.props.bpi.GBP.code), __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }\n        }, this.props.bpi.GBP.rate)));\n      } else if (this.state.currency === 'EUR') {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        }, __jsx(\"li\", {\n          className: \"list-group-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, \"check current bit coin prices\"), \"bitcoin rate for \", this.props.bpi.description, \":- \", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 65\n          }\n        }, this.props.bpi.EUR.code), __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        }, this.props.bpi.EUR.rate)));\n      }\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["C:/wamp64/www/nextjs/components/prices.js"],"names":["Prices","currency","state","props","bpi","description","USD","code","rate","GBP","EUR","React","Component"],"mappings":";;;;;;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;;;4DACI;AACFC,MAAAA,QAAQ,EAAC;AADP,K;;;;;;;6BAKD;AACL,UAAI,KAAKC,KAAL,CAAWD,QAAX,KAAsB,KAA1B,EAAgC;AAChC,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAJ,EAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAhB,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA5B,CAAlC,EACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADD,uBAEmB,KAAKE,KAAL,CAAWC,GAAX,CAAeC,WAFlC,SAEiD;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKF,KAAL,CAAWC,GAAX,CAAeE,GAAf,CAAmBC,IAA1D,CAFjD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeE,GAAf,CAAmBE,IAA5B,CAHD,CAAH,CADQ,CAAR;AAOE,OARF,MASK,IAAG,KAAKN,KAAL,CAAWD,QAAX,KAAsB,KAAzB,EAA+B;AAChC,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,uBAEsB,KAAKE,KAAL,CAAWC,GAAX,CAAeC,WAFrC,SAEoD;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKF,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBF,IAA1D,CAFpD,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBD,IAA5B,CAHJ,CADI,CAAR;AAUH,OAXI,MAYA,IAAG,KAAKN,KAAL,CAAWD,QAAX,KAAsB,KAAzB,EAA+B;AAChC,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,uBAEsB,KAAKE,KAAL,CAAWC,GAAX,CAAeC,WAFrC,SAEoD;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKF,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBH,IAA1D,CAFpD,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBF,IAA5B,CAHJ,CADI,CAAR;AAUH;AAGJ;;;;EA1CoBG,KAAK,CAACC,S;;AAiD3B,eAAeZ,MAAf","sourcesContent":["class Prices extends React.Component{\r\n    state={\r\n        currency:'USD',\r\n    }\r\n\r\n    \r\nrender() {\r\n    if (this.state.currency==='USD'){\r\n    return (<div>\r\n    <p><li  className=\"list-group-item\"> <ul><li>USD</li><li>GBP</li><li>EUR</li></ul>\r\n        <p>check current bit coin prices</p>\r\n        bitcoin rate for {this.props.bpi.description}:- <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span>\r\n        <strong>{this.props.bpi.USD.rate}</strong>\r\n    </li></p>\r\n    </div>\r\n    )}\r\n    else if(this.state.currency==='GBP'){\r\n        return (<div>\r\n            <li  className=\"list-group-item\">\r\n                <p>check current bit coin prices</p>\r\n                bitcoin rate for {this.props.bpi.description}:- <span className=\"badge badge-primary\">{this.props.bpi.GBP.code}</span>\r\n                <strong>{this.props.bpi.GBP.rate}</strong>\r\n            </li>\r\n            </div>\r\n            )\r\n\r\n\r\n    }\r\n    else if(this.state.currency==='EUR'){\r\n        return (<div>\r\n            <li  className=\"list-group-item\">\r\n                <p>check current bit coin prices</p>\r\n                bitcoin rate for {this.props.bpi.description}:- <span className=\"badge badge-primary\">{this.props.bpi.EUR.code}</span>\r\n                <strong>{this.props.bpi.EUR.rate}</strong>\r\n            </li>\r\n            </div>\r\n            )\r\n            \r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Prices"]},"metadata":{},"sourceType":"module"}